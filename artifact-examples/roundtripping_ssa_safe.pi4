  header_type ether_t {
    dstAddr: 48;
    srcAddr: 48;
    etherType: 16;
  }
  header_type ipv4_t {
    version: 4;
    ihl: 4;
    tos: 8;
    len: 16;
    id: 16;
    flags: 3;
    frag: 13;
    ttl: 8;
    proto: 8;
    chksum: 16;
    src: 32;
    dst: 32;
  }
  header_type vlan_t {
    prio: 3;
    id: 1;
    vlan: 12;
    etherType: 16;
  }
  header ether_0 : ether_t
  header ether_1 : ether_t
  header ipv4_0 : ipv4_t
  header ipv4_1 : ipv4_t
  header vlan_0 : vlan_t
  header vlan_1 : vlan_t
  ((((if(ether_0.valid) {
    remit(ether_0)
  } else {
    skip
  };
  if(vlan_0.valid) {
    remit(vlan_0)
  } else {
    skip
  };
  if(ipv4_0.valid) {
    remit(ipv4_0)
  } else {
    skip
  })  as (x:{y:⊤|y.ether_0.valid && y.ether_0.etherType == 0x8100 && !y.ether_1.valid && !y.ipv4_0.valid && !y.ipv4_1.valid && y.vlan_0.valid && (!y.vlan_0.etherType == 0x0800) && !y.vlan_1.valid && y.pkt_in.length == 0 && y.pkt_out.length == 0} +
  {y:⊤|y.ether_0.valid && y.ether_0.etherType == 0x8100 && !y.ether_1.valid && y.ipv4_0.valid && !y.ipv4_1.valid && y.vlan_0.valid && (y.vlan_0.etherType == 0x0800) && !y.vlan_1.valid && y.pkt_in.length == 0 && y.pkt_out.length == 0}) ->
    {y:⊤|y.ether_0.valid && y.ether_0.etherType == 0x8100 && !y.ether_1.valid && !y.ipv4_0.valid && !y.ipv4_1.valid && y.vlan_0.valid && (!y.vlan_0.etherType == 0x0800) && !y.vlan_1.valid && y.pkt_in.length == 0 && y.pkt_out.length == 144 && y.pkt_out[96:112]==0x8100 && (!y.pkt_out[128:144] == 0x0800)} +
    {y:⊤|y.ether_0.valid && y.ether_0.etherType == 0x8100 && !y.ether_1.valid && y.ipv4_0.valid && !y.ipv4_1.valid && y.vlan_0.valid && (y.vlan_0.etherType == 0x0800) && !y.vlan_1.valid && y.pkt_in.length == 0 && y.pkt_out.length == 304 && y.pkt_out[96:112]==0x8100 && y.pkt_out[128:144] == 0x0800});
  reset) as (x:{y:⊤|y.ether_0.valid && y.ether_0.etherType == 0x8100 && !y.ether_1.valid && !y.ipv4_0.valid && !y.ipv4_1.valid && y.vlan_0.valid && (!y.vlan_0.etherType == 0x0800) && !y.vlan_1.valid && y.pkt_in.length == 0 && y.pkt_out.length == 0} +
  {y:⊤|y.ether_0.valid && y.ether_0.etherType == 0x8100 && !y.ether_1.valid && y.ipv4_0.valid && !y.ipv4_1.valid && y.vlan_0.valid && (y.vlan_0.etherType == 0x0800) && !y.vlan_1.valid && y.pkt_in.length == 0 && y.pkt_out.length == 0}) -> {y:⊤|!y.ether_0.valid && !y.ether_1.valid && !y.ipv4_0.valid && !y.ipv4_1.valid && !y.vlan_0.valid && !y.vlan_1.valid && y.pkt_in.length == 304 && y.pkt_out.length == 0 && y.pkt_in[96:112]==0x8100 && y.pkt_in[128:144] == 0x0800} +
  {y:⊤|!y.ether_0.valid && !y.ether_1.valid && !y.ipv4_0.valid && !y.ipv4_1.valid && !y.vlan_0.valid && !y.vlan_1.valid && y.pkt_in.length == 144 && y.pkt_out.length == 0 && y.pkt_in[96:112]==0x8100 && (!y.pkt_in[128:144] == 0x0800)});
  extract(ether_1);
  if(ether_1.etherType == 0x8100) {
    extract(vlan_1);
    if(vlan_1.etherType == 0x0800) {
      extract(ipv4_1)
    } else {
      if(ipv4_0.valid) {
        add(ipv4_1);
        ipv4_1[0:160] := ipv4_0[0:160]
      } else {
        skip
      }
    }
  } else {
    if(ether_1.etherType == 0x0800) {
      extract(ipv4_1)
    } else {
      if(ipv4_0.valid) {
        add(ipv4_1);
        ipv4_1[0:160] := ipv4_0[0:160]
      } else {
        skip
      }
    };
    if(vlan_0.valid) {
      add(vlan_1);
      vlan_1[0:32] := vlan_0[0:32]
    } else {
      skip
    }
  }
