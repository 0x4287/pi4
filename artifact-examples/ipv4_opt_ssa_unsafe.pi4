header_type ethernet_t {
  dstAddr: 48;
  srcAddr: 48;
  etherType: 16;
}
header_type ipv4_t {
  version: 4;
  ihl: 4;
  tos: 8;
  len: 16;
  id: 16;
  flags: 3;
  frag: 13;
  ttl: 8;
  proto: 8;
  chksum: 16;
  src: 32;
  dst: 32;
}
header_type ipv4opt_t {
  type: 8;
}
header ether_0 : ethernet_t
header ether_1 : ethernet_t
header ipv4_0 : ipv4_t
header ipv4_1 : ipv4_t
header ipv4opt_0 : ipv4opt_t
header ipv4opt_1 : ipv4opt_t

(extract(ether_1) as (x:{y:⊤|!y.ether_0.valid && !y.ether_1.valid && !y.ipv4_0.valid && !y.ipv4_1.valid && !y.ipv4opt_0.valid && !y.ipv4opt_1.valid && y.pkt_in.length > 280}) -> {y:⊤|!y.ether_0.valid && y.ether_1.valid && !y.ipv4_0.valid && !y.ipv4_1.valid && !y.ipv4opt_0.valid && !y.ipv4opt_1.valid && y.pkt_in.length > 168});
if(ether_1[96:112] == 0x0800) {
  (extract(ipv4_1) as (x:{y:⊤|!y.ether_0.valid && y.ether_1.valid && y.ether_1[96:112]==0x0800 && !y.ipv4_0.valid && !y.ipv4_1.valid && !y.ipv4opt_0.valid && !y.ipv4opt_1.valid && y.pkt_in.length > 168}) -> {y:⊤|!y.ether_0.valid && y.ether_1.valid && y.ether_1[96:112]==0x0800 && !y.ipv4_0.valid && y.ipv4_1.valid && !y.ipv4opt_0.valid && !y.ipv4opt_1.valid && y.pkt_in.length > 8})
} else {
  (if(ipv4_0.valid) {
     add(ipv4_1);
     ipv4_1[0:160] := ipv4_0[0:160]
  } else {
    skip
  })
}
